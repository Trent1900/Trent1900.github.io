<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://trent1900.github.io/</id><title>Study notes</title><subtitle>Learning is a great process that make you a better person</subtitle> <updated>2024-10-24T16:03:45+11:00</updated> <author> <name>Trent Chuanan Liu</name> <uri>https://trent1900.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://trent1900.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://trent1900.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 Trent Chuanan Liu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>video in next js</title><link href="https://trent1900.github.io/posts/video/" rel="alternate" type="text/html" title="video in next js" /><published>2024-10-24T11:02:00+11:00</published> <updated>2024-10-24T11:02:00+11:00</updated> <id>https://trent1900.github.io/posts/video/</id> <content src="https://trent1900.github.io/posts/video/" /> <author> <name>Trent1900</name> </author> <category term="next.js vide" /> <summary> video scr can not be loaded it turns out to be the git ignore file, coz during testing period, I do not to upload my testing video to git hub due to the size of it, so I put “.mp4” keyword in the ignore file, so that all mp4 file will be ignored and not up load to cloud. and works only in local environment. to add a preview of the video, simply just add poster='/images/... </summary> </entry> <entry><title>cron task</title><link href="https://trent1900.github.io/posts/cron-task/" rel="alternate" type="text/html" title="cron task" /><published>2023-12-29T11:02:00+11:00</published> <updated>2023-12-29T11:02:00+11:00</updated> <id>https://trent1900.github.io/posts/cron-task/</id> <content src="https://trent1900.github.io/posts/cron-task/" /> <author> <name>Trent1900</name> </author> <category term="mongoose type convert" /> <summary> 我设置了一个定时任务来跟踪 cw 网站上的价格变化，代码是这样的：schedule.scheduleJob(“* * */5 * * *”, () =&amp;gt; {…});。我预期这个任务每 5 小时运行一次。然而，很快我发现 record 函数频繁运行，大概每一秒一次。后来查阅资料后，才知道 ～～～ The cron expression * * */5 * * * breaks down as follows: First *: every second Second *: every minute */5: every 5 hours ～～～ For running the schedule every 5 minutes, the correct cron expression should be 0 */5 * * * *, which t... </summary> </entry> <entry><title>Strong typed Polymorphic component</title><link href="https://trent1900.github.io/posts/polimorphic/" rel="alternate" type="text/html" title="Strong typed Polymorphic component" /><published>2023-09-06T10:02:00+10:00</published> <updated>2023-12-30T15:24:49+11:00</updated> <id>https://trent1900.github.io/posts/polimorphic/</id> <content src="https://trent1900.github.io/posts/polimorphic/" /> <author> <name>Trent1900</name> </author> <category term="strong typed component" /> <category term="polymorphic component" /> <summary> Creating an polymorphic component In this example, we’ll leverage typescript to build a strong typed component that can have its only props instead of setting all props as optional props strong typed component, let say if we have an Component called ‘MyComponent’ with as props to be img, then the compiler should give us a warning that img element need to have src and alt pros &amp;lt;MyC... </summary> </entry> <entry><title>Dropdown manual with recursive method</title><link href="https://trent1900.github.io/posts/dropdown-manual/" rel="alternate" type="text/html" title="Dropdown manual with recursive method" /><published>2023-08-06T10:02:00+10:00</published> <updated>2023-12-30T15:20:02+11:00</updated> <id>https://trent1900.github.io/posts/dropdown-manual/</id> <content src="https://trent1900.github.io/posts/dropdown-manual/" /> <author> <name>Trent1900</name> </author> <category term="dropdown manual" /> <category term="recursive component" /> <summary> Creating a Recursive List Menu Any Number of Levels Deep In this example, we’ll leverage recursion to build a menu that can have an unlimited number of nested levels. And the result will looks like this: Before diving into the task at hand, it is essential to establish the data type we are working with. Think about a scenario where we aim to display an image using a URL stored w... </summary> </entry> <entry><title>debounce</title><link href="https://trent1900.github.io/posts/debounce/" rel="alternate" type="text/html" title="debounce" /><published>2023-08-01T12:02:00+10:00</published> <updated>2023-08-05T23:37:29+10:00</updated> <id>https://trent1900.github.io/posts/debounce/</id> <content src="https://trent1900.github.io/posts/debounce/" /> <author> <name>Trent1900</name> </author> <category term="debounce" /> <summary> debounce what is debounce A debounce function in JavaScript ensures that your code is executed only once per user input. It is commonly used for scenarios such as search box suggestions, text-field auto-saves, thereby enhancing user experience and optimizing performance. how debounce works,check the link The principle of debounce is to wait for a certain period of time (the ... </summary> </entry> </feed>
